name: Django CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create .env File
        run: |
          echo "DATABASE_ENGINE=${{ secrets.DATABASE_ENGINE }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env

      - name: Start Docker Compose
        run: docker compose up -d

      - name: Run Migrations and Tests
        run: docker compose run --rm web sh -c "python manage.py migrate && python manage.py test"

      - name: Stop Containers
        run: docker compose down

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup SSH Access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to AWS EC2
        run: |
          ssh ubuntu@${{ secrets.AWS_HOST }} << 'EOF'
          cd /var/www/html/kartoza_portfolio
          git config --global --add safe.directory /var/www/html/kartoza_portfolio
          git pull origin master
          sudo docker compose down
          sudo docker compose up -d --build
          EOF
